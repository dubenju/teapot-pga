/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 18 10:57:35 GMT 2020
 */

package teapot.pga;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.RejectedExecutionException;
import java.util.concurrent.RejectedExecutionHandler;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import teapot.pga.Loc;
import teapot.pga.LocModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Loc_ESTest extends Loc_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Loc loc0 = new Loc();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("#y+|-@,G");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Y,9qXT/w[v%?_");
      stringArray0[1] = "";
      // Undeclared exception!
      try { 
        Loc.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Loc loc0 = new Loc();
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        Loc.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("teapot.pga.OptionsParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Scala";
      stringArray0[1] = "`;?b0D%9!";
      stringArray0[2] = "";
      Loc.main(stringArray0);
      Loc.main(stringArray0);
      Loc loc0 = new Loc();
      MockURI.URI("");
      MockFile mockFile0 = new MockFile("--BY-LANG");
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      LinkedBlockingDeque<Runnable> linkedBlockingDeque0 = new LinkedBlockingDeque<Runnable>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(0, 1, 0, timeUnit0, linkedBlockingDeque0, threadFactory0);
      // Undeclared exception!
      try { 
        loc0.proc(mockFile0, threadPoolExecutor0, (LocModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("teapot.pga.Loc", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Loc loc0 = new Loc();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      // Undeclared exception!
      try { 
        Loc.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Loc loc0 = new Loc();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("#y+|-@,G");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Y,9qXT/w[v%?_");
      stringArray0[1] = "#y+|-@,G";
      // Undeclared exception!
      try { 
        Loc.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Loc.main(stringArray0);
      assertEquals(0, stringArray0.length);
      
      Loc loc0 = new Loc();
      assertNotNull(loc0);
      assertEquals(20000, Loc.BINARY_ID);
      assertEquals(10000, Loc.TEXT_ID);
      assertEquals(1, Loc.PROCESSORS);
      
      MockFile mockFile0 = new MockFile("s/g*I0JMF!]K1F");
      assertNotNull(mockFile0);
      
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      PriorityBlockingQueue<Runnable> priorityBlockingQueue0 = new PriorityBlockingQueue<Runnable>();
      assertNotNull(priorityBlockingQueue0);
      
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(1, 1, 10000, timeUnit0, priorityBlockingQueue0);
      assertNotNull(threadPoolExecutor0);
      
      RejectedExecutionHandler rejectedExecutionHandler0 = threadPoolExecutor0.getRejectedExecutionHandler();
      assertNotNull(rejectedExecutionHandler0);
      
      BlockingQueue<Runnable> blockingQueue0 = threadPoolExecutor0.getQueue();
      assertNotNull(blockingQueue0);
      
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      assertNotNull(threadPoolExecutor_DiscardPolicy0);
      
      ThreadPoolExecutor threadPoolExecutor1 = null;
      try {
        threadPoolExecutor1 = new ThreadPoolExecutor(20000, 10000, (-1166L), timeUnit0, blockingQueue0, threadFactory0, threadPoolExecutor_DiscardPolicy0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "qS1`_Cl@5$CSd<I?[L";
      Loc.main(stringArray0);
      assertEquals(2, stringArray0.length);
      
      Loc.main(stringArray0);
      assertEquals(2, stringArray0.length);
      
      Loc loc0 = new Loc();
      assertNotNull(loc0);
      assertEquals(10000, Loc.TEXT_ID);
      assertEquals(1, Loc.PROCESSORS);
      assertEquals(20000, Loc.BINARY_ID);
      
      MockFile mockFile0 = new MockFile("1", "1");
      assertNotNull(mockFile0);
      
      int int0 = 20000;
      Loc.main(stringArray0);
      assertEquals(2, stringArray0.length);
      
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      LinkedBlockingDeque<Runnable> linkedBlockingDeque0 = new LinkedBlockingDeque<Runnable>();
      assertNotNull(linkedBlockingDeque0);
      
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ThreadPoolExecutor.AbortPolicy threadPoolExecutor_AbortPolicy0 = new ThreadPoolExecutor.AbortPolicy();
      assertNotNull(threadPoolExecutor_AbortPolicy0);
      
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      ThreadGroup threadGroup1 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup1, "5VM/gLT1}_\"oT");
      assertNotNull(mockThread0);
      
      MockThread mockThread1 = new MockThread(threadGroup0, mockThread0, "Cw@l0r}xd");
      assertNotNull(mockThread1);
      assertFalse(mockThread1.equals((Object)mockThread0));
      
      MockThread mockThread2 = new MockThread(threadGroup0, mockThread1);
      assertNotNull(mockThread2);
      assertFalse(mockThread2.equals((Object)mockThread0));
      assertFalse(mockThread2.equals((Object)mockThread1));
      assertFalse(mockThread0.equals((Object)mockThread1));
      assertFalse(mockThread1.equals((Object)mockThread0));
      
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(20000);
      assertNotNull(scheduledThreadPoolExecutor0);
      
      // Undeclared exception!
      try { 
        threadPoolExecutor_AbortPolicy0.rejectedExecution(mockThread2, scheduledThreadPoolExecutor0);
        fail("Expecting exception: RejectedExecutionException");
      
      } catch(RejectedExecutionException e) {
         //
         // Task Thread[MockThread-0,0,null] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@4ecccb0[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor$AbortPolicy", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Loc loc0 = new Loc();
      String string0 = "";
      MockFile mockFile0 = new MockFile("");
      mockFile0.setLastModified(0L);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      // Undeclared exception!
      try { 
        Loc.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Loc loc0 = new Loc();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "XACRO";
      stringArray0[2] = "";
      stringArray0[3] = "m w,}Da@";
      stringArray0[4] = "";
      stringArray0[5] = "JgR$8P`~gmA,'";
      stringArray0[6] = ", files=";
      stringArray0[7] = "";
      Loc.main(stringArray0);
      MockFile mockFile0 = new MockFile((String) null, "\u79D2");
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, threadPoolExecutor_DiscardPolicy0);
      LocModel locModel0 = new LocModel();
      // Undeclared exception!
      try { 
        loc0.proc(mockFile0, scheduledThreadPoolExecutor0, locModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("teapot.pga.OptionsParser", e);
      }
  }
}
